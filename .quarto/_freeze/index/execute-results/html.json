{
  "hash": "998282fe1d58a3879bfc4f5834e387b0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: NanoITS\ntoc: true\n\nexecute:\n  eval: false\n\nengine: knitr\n---\n\n\nNanoITS is a classifier for long-read Oxford Nanopore data of the eukaryotic 18S/SSU-ITS1-ITS2 operon.\n\nWhen giving the tool some nanopore long-read data it will:\n\n-   Provide a quality report of the raw reads\n-   Check the reads for adaptors and barcodes and if present trim the reads using porechop\n-   Remove low-quality and short reads with chopper\n-   Provide a quality report for the cleaned reads\n-   Identify and separate both the ITS1/ITS2 and 18S rRNA gene using ITSx\n-   Classify the SSU and/or ITS1/ITS2 gene using kraken2 and/or minimap2 and the Silva and Uniprot database, respectively\n-   Generate taxonomic barplots and OTU tables\n\nBelow you can find the full workflow:\n\n![](img/visualization.png)\n\n## Quick start\n\nTo run NanoITs, install conda and use it to installed snakemake as follows:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nmamba create --name snakemake -c conda-forge -c bioconda snakemake=7.32.4 python=3.11.6\n```\n:::\n\n\nAfterwards, you can clone the directory from github via:\n\n\n::: {.cell}\n\n```{.python .cell-code}\ngit clone https://github.com/ndombrowski/NanoITS.git\n```\n:::\n\n\nProvide your sample names and path to the samples as a comma-separated file. To view an example have a look at [`example_files/mapping.csv`](https://raw.githubusercontent.com/ndombrowski/NanoITS/main/example_files/mapping.csv). The sample names should be unique and consist of letters, numbers and `-` only. The barcode column can be left empty as it is not yet implemented. The path should contain the path to your demultiplexed, compressed fastq file(s).\n\nAdjust `config/config.yaml` to configure the location of your mapping file as well as specify the parameters used by NanoITs.\n\nNanoITs can then be run with (adjust the cores based on your system):\n\n\n::: {.cell}\n\n```{.python .cell-code}\n#perform a dry-run to ensure everything is working correctly\nsnakemake --use-conda --cores <nr_cores> \\\n  -s <path_to_NanoITS_install>/workflow/Snakefile \\\n  --configfile config/config.yaml \\\n  --conda-prefix <path_to_NanoITS_install>/workflow/.snakemake/conda  \\\n  -np \n\n#run NanoITS\nsnakemake --use-conda --cores <nr_cores> \\\n  -s <path_to_NanoITS_install>/workflow/Snakefile \\\n  --configfile config/config.yaml \\\n  --conda-prefix <path_to_NanoITS_install>/workflow/.snakemake/conda  \\\n  --rerun-incomplete --nolock\n```\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}